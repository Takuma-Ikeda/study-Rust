/*
 * 関数
 * 仮引数の型は省略できない
 */
fn add(x: i32, y: i32) -> i32 {
    // return x + y; とすることもできるが...
    // 関数末尾に return なし、セミコロンなしで戻り値を記述するのが慣例
    x + y
}

pub fn example() {
    // 関数 add 呼び出し
    let added = add(10, 20);
    println!("{}", added); // 30

    /*
     * クロージャ
     * 引数の定義不要で、外側の環境の値も捕捉できる
     * ||で囲った中に引数を記述
     * 右側に関数内の処理を記述
     * クロージャは他の関数の引数に渡して「コールバック関数」として使う用途が多い
     * 関数内の処理が 1 つの式だけで完結する場合は、例のように { } を省略可能
     */
    let z = 20;
    let add_z = |x: i32| x + z;
    println!("{}", add_z(10)); // 30
}
